---
- name: install docker
  package:
    name: docker

- name: install python docker library
  pip:
    name: docker

- name: run watchtower container
  docker_container:
    name: watchtower-autoupdate
    image: v2tec/watchtower
    restart_policy: unless-stopped
    state: stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

- name: run portainer container
  docker_container:
    name: portainer-rvgate-nl
    image: portainer/portainer
    pull: yes
    state: started
    restart_policy: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data portainer/portainer
    env:
      VIRTUAL_HOST: "portainer.rvgate.nl"
      VIRTUAL_PORT: "9000"
    command: "--admin-password '$2y$05$BJ3MUBMolVeXjt9rnrDJBOqo2/qMtXUMJPCOaUTwTieBIY5v8iYE6'"

- name: create tmp docker directory
  file:
    path: /srv/docker/nginx-ingest
    state: directory

- name: upload nginx dockerfile
  tags: build
  copy:
    src: nginx-ingest.Dockerfile
    dest: /srv/docker/nginx-ingest/Dockerfile

- name: build nginx ingest container
  docker_image:
    build:
      pull: yes
      path: /srv/docker/nginx-ingest/
    name: nginx-ingest
    tag: latest
    source: build
    force_absent: yes
    force_tag: yes
    force_source: yes
    state: present

- name: run nginx ingest container
  docker_container:
    name: nginx-ingest
    image: nginx-ingest:latest
    state: started
    restart_policy: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /etc/letsencrypt:/etc/letsencrypt
      - /etc/letsencrypt/live/rvgate.nl:/etc/nginx/certs
    env:
      DEFAULT_HOST: "rvgate.nl"